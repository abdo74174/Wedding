{
    ViewData["Title"] = "Shopping Cart";
}

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"]</title>
    <link href="https://fonts.googleapis.com/css2?family=Amiri:wght@700&display=swap" rel="stylesheet">
    <style>
        body {
            font-family: 'Amiri', serif;
            background-color: #f5efe6;
            color: #5c4033;
            margin: 0;
            padding: 20px;
            display: flex;
            flex-direction: column;
            align-items: center;
        }

        h1 {
            font-size: 2.5rem;
            color: #3e2723;
            margin-bottom: 20px;
            text-align: center;
        }

        table {
            width: 80%;
            border-collapse: collapse;
            background-color: #f7f1e3;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            border-radius: 8px;
            overflow: hidden;
            border: 1px solid #8d6e63;
        }

        th, td {
            padding: 15px;
            text-align: left;
            font-size: 1.2rem;
        }

        th {
            background-color: #6d4c41;
            color: #fff;
            text-transform: uppercase;
            font-weight: bold;
        }

        td {
            border-bottom: 1px solid #a1887f;
        }

        tr:hover {
            background-color: #d7ccc8;
        }

        tr:last-child td {
            border-bottom: none;
        }

        button {
            margin-top: 20px;
            padding: 10px 20px;
            font-size: 1.2rem;
            font-family: 'Amiri', serif;
            background-color: #6d4c41;
            color: #fff;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            transition: background-color 0.3s ease;
        }

            button:hover {
                background-color: #5c4033;
            }

        .delete-btn {
            padding: 5px 10px;
            background-color: #e57373;
            color: #fff;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }

            .delete-btn:hover {
                background-color: #d32f2f;
            }

      media (max-width: 768px) {
            table {
                width: 100%;
            }

            th, td {
                padding: 10px;
                font-size: 1rem;
            }
        }
    </style>
</head>

<body>
    <h1>Your Shopping Cart</h1>
    <table>
        <thead>
            <tr>
                <th>Product Name</th>
                <th>Price</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody id="cart-items">-->
			</tbody>
				</table>
				<button id="home-button">Home</button>

				<script>
					// Load cart data from Local Storage
					const cart = JSON.parse(localStorage.getItem("cart")) || [];

					// Get the table body
					const cartItems = document.getElementById("cart-items");

					// Function to render cart items in the table
					function renderCart() {
						// Clear the table
						cartItems.innerHTML = '';

						// Populate the table with cart items
						cart.forEach((item, index) => {
							const row = document.createElement("tr");
							row.innerHTML = `
									<td>${item.name}</td>
									<td>${item.price} EGP</td>
									<td><button class="delete-btn" onclick="deleteItem(${index})">Delete</button></td>
								`;
							cartItems.appendChild(row);
						});
					}

					// Function to delete an item from the cart
					function deleteItem(index) {
						// Remove item from the cart array
						cart.splice(index, 1);

						// Save updated cart to localStorage
						localStorage.setItem("cart", JSON.stringify(cart));

						// Re-render the cart after deletion
						renderCart();
					}

					// Initial render of the cart
					renderCart();

					// Add functionality to the Home button
					const homeButton = document.getElementById("home-button");
					homeButton.addEventListener("click", () => {
						// Navigate to the wedding page
						window.location.href = "@Url.Action("Index", "Wedding")";
					});
				</script>
			</body>

			</html>
			Items will be populated dynamically -->
   
